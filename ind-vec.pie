#lang pie

;; Exercises on ind-Vec from Chapter 11 of The Little Typer

;; Exercise 11.1
;;
;; Use ind-Vec to define a function called unzip that takes unzips
;; a vector of pairs into a pair of vectors.

(claim mot-unzip
  (Pi [(A U) (B U) (k Nat)]
    (-> (Vec (Pair A B) k) U)))
(define mot-unzip
  (lambda (A B k)
    (lambda (vec)
      (Pair (Vec A k) (Vec B k)))))

(claim unzip
  (Î  ([A U]
      [B U]
      [n Nat])
    (-> (Vec (Pair A B) n)
      (Pair (Vec A n) (Vec B n)))))


(define unzip
  (lambda (A B n vec)
    (ind-Vec
      n
      vec
      (mot-unzip A B)
      (cons vecnil vecnil)
      (lambda (k e es pair)
        (cons
          (vec:: (car e) (car pair))
          (vec:: (cdr e) (cdr pair))
          )
        )))
  )
  